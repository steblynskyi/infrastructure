FROM microsoft/mssql-server-linux:2017-GA

ENV DEBIAN_FRONTEND noninteractive

RUN apt-get update && apt-get -y install apt-utils dialog
RUN apt-get install -y software-properties-common python-software-properties

# Install Java.
RUN \
  echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections && \
  add-apt-repository -y ppa:webupd8team/java && \
  apt-get update && \
  apt-get install -y openjdk-8-jdk && \
  rm -rf /var/lib/apt/lists/* && \
  rm -rf /var/cache/oracle-jdk8-installer

 # Define commonly used JAVA_HOME variable
ENV JAVA_HOME /usr/lib/jvm/java-8-oracle

ADD https://storage.googleapis.com/kubernetes-release/release/v1.9.3/bin/linux/amd64/kubectl /usr/local/bin/kubectl
RUN chmod +x /usr/local/bin/kubectl

#Docker Repo
RUN apt-get update && apt-get install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common
RUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
RUN add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo "$ID") $(lsb_release -cs) stable"

#Node Repo
RUN wget -qO- https://deb.nodesource.com/setup_8.x | bash -

RUN apt-get update && apt-get install -y nodejs docker-ce python make gcc python-pip zip unzip libssl-dev libffi-dev python-dev
RUN update-rc.d docker enable
RUN npm install -g npm@latest

RUN pip install --upgrade pip
RUN pip install awscli --ignore-installed six
ENV JENKINS_REMOTING_VERSION 3.9
#ENV HOME /home/jenkins

RUN useradd -c "Jenkins user" -d /home/jenkins -m jenkins
RUN gpasswd -a jenkins docker
RUN gpasswd -a jenkins daemon
RUN gpasswd -a jenkins root
RUN curl --create-dirs -sSLo /usr/share/jenkins/remoting-$JENKINS_REMOTING_VERSION.jar http://repo.jenkins-ci.org/public/org/jenkins-ci/main/remoting/$JENKINS_REMOTING_VERSION/remoting-$JENKINS_REMOTING_VERSION.jar \
  && chmod 755 /usr/share/jenkins


# Install mono with Dotnet core 2.2
RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
# Mono repo for Debian 8
RUN echo "deb http://download.mono-project.com/repo/ubuntu stable-xenial main" | tee /etc/apt/sources.list.d/mono-official-stable.list

RUN apt-get update
RUN apt-get install -y curl libunwind8 gettext mono-complete nuget

RUN npm install -g newman
RUN curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
RUN mv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg
RUN sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-xenial-prod xenial main" > /etc/apt/sources.list.d/dotnetdev.list'
RUN apt-get update && apt-get -y install dotnet-sdk-3.1
RUN export PATH=$PATH:$HOME/dotnet
RUN dotnet --version
RUN curl -o /usr/lib/nuget/NuGet.exe https://dist.nuget.org/win-x86-commandline/latest/nuget.exe

# Prepare GitVersion tool for versioning builds
RUN apt-get install libcurl3
RUN git clone https://github.com/GitTools/GitVersion.git
RUN dotnet publish --configuration release --framework netcoreapp3.1 --output GitVersion/src/GitVersionExe/pub GitVersion/src/GitVersionExe/GitVersionExe.csproj
RUN mkdir /opt/GitVersion
RUN mv GitVersion/src/GitVersionExe/pub/* /opt/GitVersion/
RUN rm -rf GitVersion

COPY jenkins-slave.sh /usr/local/bin/jenkins-slave.sh

VOLUME /home/jenkins

CMD /opt/mssql/bin/sqlservr start &

ENTRYPOINT ["/usr/local/bin/jenkins-slave.sh"]
apiVersion: v1
data:
  config: apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMwekNDQWJ1Z0F3SUJBZ0lNRmUzRVJjSHBuMGgxRDZVWk1BMEdDU3FHU0liM0RRRUJDd1VBTUJVeEV6QVIKQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13SGhjTk1qQXdNVEkxTVRReU1EUTRXaGNOTXpBd01USTBNVFF5TURRNApXakFWTVJNd0VRWURWUVFERXdwcmRXSmxjbTVsZEdWek1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBCk1JSUJDZ0tDQVFFQXRBUHJDc1hDbm5xR3J0eWxPeVZjTnZJQkFUTkNocjdaZFc2UU10V3R1MXlNak1aUFRHd04KbEVwV0NuMXNLMzg1d3dFVnZ1RTFGSGZGeC9weGhjZG9KcS9DTUcvTENYZmt4K29td2JXTGZqMzVMMVN6ZlBXNAplRDQ4aWlhYkN1N042aTRhWjZITXZLd1dNdG5haEdqMXAwalpXTHNtTVNyaUNTa0RNd1l2L0tuMkJpRkNLZUNDCjUzTmFPb21hUm51NjIxSjZOMFcweVpZb1V0OUh2UjMwbFRUYlNJU1ltVGRBdGl3YnlnNmUyQ1BnNkhUc0RPQW0KVVI2OHpCaGQ1V1lmTkVxeVBNM3dDbHVrRzJwc1V1aXZwUGpJOUN1SS9PWG1VNCt3SVZsejRva1g1UnJkclhsZgpqc0F4RS82TlIwZmFKUGpHeml5cC93bjlDR0VMZ1NwNjNRSURBUUFCb3lNd0lUQU9CZ05WSFE4QkFmOEVCQU1DCkFRWXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFiWVltNFNndWk5VXQKTFR0eDZVdE52ZnIwUlNUOSs2ZVVGMHkyTmx5YWlHVEo1elRBdzA0M0Rxa2MxTjVQc1pTVHpuNWhlK1M5dzdTcQpJODk3bk1Ka1JMcUFRZDNkRFZXSXZJdmsyQUFBTFRYQ21Sd3AyYmU4TVVaeUhsK2NUdVlGd2hYZ3JoRldHbTExCkM1eVZ6OURsbGM5Vmp5ckhiZ280S1laVTlNZ0JvamM1ZVhxVEYvMGFHbE1YV3RyK0owV2FwZW1TMTVhdi9IZUMKdXVUYjFKR2dpQjBKWWRuNGlVNjBoemZISnpqUTkrTjdDVUFDZ0dKVVEvclRneU1qVFQxK1BvaTY4V3llWjFSZgo1ZkFsNDV4aUVsT21zZ1hCN1hOS0MweVc1UGFHK25MUzRRMkNXN0RkQnJjVkJBMFcwOWhIWktaYmFtdTkwdnAyCjJvbjlENTUvcFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    server: https://api.kube.devinnroad.com
  name: develop
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMwekNDQWJ1Z0F3SUJBZ0lNRmFWcEdmWTZJeWkxa1d0SU1BMEdDU3FHU0liM0RRRUJDd1VBTUJVeEV6QVIKQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13SGhjTk1Ua3dOakF6TWpFd01EQTJXaGNOTWprd05qQXlNakV3TURBMgpXakFWTVJNd0VRWURWUVFERXdwcmRXSmxjbTVsZEdWek1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBCk1JSUJDZ0tDQVFFQXMrNFBwdVFFTEpGcnZFemRzVXpSL0lsT1owZFRkTUlyMHI1MURWZnF3YjdkNzVML093YWsKb2k2ZGtHVEdrdXIwRnYwMVg0M1BNdVJGZnpJZ051cGhNajROYS9xbmh0Rk9GK3hRT2gvbllmekRPSGRHU2VjZgp3eHJHU1JmYXBQMnR4bE5pcmZXTlhlL09aMTJ4M0FzdWZXaS9OcUJiNnpwMEx2M1dEMjlub0dtWDNZeGRWNy9VCjVhS1c1R1UrVGtud2tUUGNlcmQySlU5V0UwVk9kWnVEelZRdDFmUm1ncEVOaUd6SkVoa1QwYmtWcXlKUkh6dTQKYTQxMytWTWdiNXByUXNqRWJlcXBpZHNYVk4vQWFpUjgrRjU1UUxJV0lyUnpLS2pUbURWWVY1dmJvZVRROFFoSwpjTXg0anJaRzVtblFFRUl6MnNHYSt6WWM4N25zQlVydWF3SURBUUFCb3lNd0lUQU9CZ05WSFE4QkFmOEVCQU1DCkFRWXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFvWTd0Uzd2Z0QvMXgKQ1d5dlRaQnBvSGxCaTVCNU56UnZQUXdxNU1kYnZLTFRBa3QyZmEzUU55QndSeXBSaG5yZmRzTm9aWWw0cHpOcwpXK2dXUDJYTEh5R2plN3AwL3RTeXVIajlpcFVDK0hrOE8xL01oTjlwVXQveGVhMnFLTWtlaXFvbThhSFNyTzBBCmQzZjA1eElXQ2wzS05YVjkwR2lhYnpjYUZDT1EwNUpVYW1EOHU5TW5oUkxKOE1FNXJhcWJJMTNEcTR0SWtoZlIKRm5weU9jZk4wU0hHSmhkZVR5UDRhWFJBOVRhZU1uQXpFQktSSklJMld1NGV1NlRQbTR6ZUY1clprWm1LZlRYYgpTMFh6WEczUm9OckE0V2VmdXVNTlhpYU9sRnNEMDFldFptcnFvenFobDgvWnR1WS9ySldKeDNMTTJoL0ZwY0NqCkRvRjkzUUsvNkE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUmpDQ0FpNmdBd0lCQWdJTUYyT253cUVPaGJqOVU2dExNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1EOHhGakFVCkJnTlZCQU1URFd0MVltVnlibVYwWlhNdFkyRXhKVEFqQmdOVkJBVVRIRGN5TXpnMk16RXhNRGMxTURreE16UTMKTVRnM01qQTFNVGc1T0Rjd0hoY05Nak13TlRJM01UVTBOVE01V2hjTk16TXdOVEkyTVRVME5UTTVXakEvTVJZdwpGQVlEVlFRREV3MXJkV0psY201bGRHVnpMV05oTVNVd0l3WURWUVFGRXh3M01qTTROak14TVRBM05UQTVNVE0wCk56RTROekl3TlRFNE9UZzNNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXJJNEcKSU9DeEdGNFZYNUNhejRXeG1JcW9sZXQ0Mys4YzFsL0tnemdxZkpIb0I0VGt2cDdsUk9FNDlzQkIrZVFVcUJlMApIekdxc1Z2WmZ1cHpyT2N6eWErckJ2WTlDNExKcnVhbC9hTklUWUk4WmE2SGFkZ0t6dThBVmNtWjVSQTJETEFtCktSckRWdEJoRFRqOTVoM3BkT0x4SVNBZFRUZFUxaW44Sm4yTHRTZlZxVjVLQ09kbU1hNW02ZVRPNVZYNjB5dmMKZ0VDT0pjV0VSRFpQOEgwdlBiNnJTcC9FT29INlVLWmN0WFExR1VLQ25UVndwWGtOMUYreEQ4eXVkRXFoRUs5awpBL0F0ZU54UElZR1BRSlQ4dmd4VXRQaXN4UFB6Tk5KRUhSejZTUU91TW8xS1UzVWM5Sno2QXE3NjYzQ05RQ0lxCkI3THBrdnUrYzFCMHJvYVdYUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FRWXdEd1lEVlIwVEFRSC8KQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVblJCRlNhNkRrcHBPY2Nwc3lFLzI3UkdlbHNzd0RRWUpLb1pJaHZjTgpBUUVMQlFBRGdnRUJBQlNLM1NGa3hvZzhkdWVJYTdHMFV6eTRzcEVzM2ZBRjFvUmdFM2ZlT2VPQ3k1bXcyU25HCjJsaWpiTTBuWGJ0M2c1UEpma01lemxTcEl0NzZKdzMrWEFMT3lmWElKUks0bmZzS2NQM3IvNkdXOVBScXJjbncKcE5hdGF4WjBSWngySUtkaEhoam5UVmJvQjU3Zk5CS2FrWG96L2FEZHMyazdZRHJJYVBsVlUyaVN3R0JYTWp5agpOUTR6cHdyT1VHN3IyanNpNTJ0RHJLTGVsZjVRUkQ3VWNRNXd1eThVZkZab05ONWMvMXZTWFlJcjZ0cy94T3RnCmhvUlQ3dTUvS3JkdnJUT1JFV0ZUWStlbjYyRSs5S3NWMEt3MEJyY3BVRjJmOEJXQVNhY3JySkQ4eGk1NDR4a08KSDd6VmlpSU5tR2QyTTVpV2tJTXQ5VmMzejlJMzROeUhJZXc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    server: https://api.kube.qa3innroad.com
  name: qa3
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMwekNDQWJ1Z0F3SUJBZ0lNRlZhRUdWcDZBeEVOQU1ZQ01BMEdDU3FHU0liM0RRRUJDd1VBTUJVeEV6QVIKQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13SGhjTk1UZ3dPVEU1TWpBeU5qQTNXaGNOTWpnd09URTRNakF5TmpBMwpXakFWTVJNd0VRWURWUVFERXdwcmRXSmxjbTVsZEdWek1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBCk1JSUJDZ0tDQVFFQXhSSGRKL0FWajVXVVNMcnJOREZqRTJtOThVZ1Z2WS9HYzd1c3poNUdHRm9ycDkyUE0vSGoKTS9DcEhNazBybElWWWJZSEFITExjYmdmVDRGbUM2aUNNNWdBZEFhVE43WHV6TkFHeXdrcXZsT0Q0U2g5VjNzcQpkWHErRmdYMzhJUDVYU3JSOWdYRnJBVjRaN1pTK2psRGxHaVJsc1o1Z3lid3Nvb3NQdDBRdkRqdnhtQTFlQ0IrCnF3U2ppb0h6Ynl0VWJ5RlFxa2ZMTlNZaUhWMkNsMU5LOGZTN3c4SVZNYVlNUjdialVBQUJHNjZYcG5aNDErTEgKSTZyb01iTCtiRW9pK1N1Y093U3kvM0dxRzgxcFZBWnB6RVF4clo4OURKQTFnVm8vVnVMblhKQm5qWHozZzdGYgpRZlgzM3MyVFh5cXl3cVcrandTWGVMVkk2MDRGeTJlUy9RSURBUUFCb3lNd0lUQU9CZ05WSFE4QkFmOEVCQU1DCkFRWXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUF1ekRuamV3WUQ5aFEKWUM0RTBVa2VoRmZoUlZtTWJJekozdEtodFVVb3FGTFM0UUlxYVVwS3hETU43VFROTXVxbjlsVWdLamdrR2pSaAo2K21KR05NWDNyYmJIbkNpRHhoNkIvem55YjkrU2JvVTdpWnR4RFVOcStkSExybDN0SERTbGxobmZ2RVYxQWJHCmtUdVZmSjBPUGdSOEFQNk10WmtsaWs2eU84V1NrT2dlWVVzTzhJb0t3U2Y3TXNFS3JwVzFCazJLVm5odDg4TE8Kb3NJeURBMXc5bURFRTdCMHUzdmkvOGdiOWdvaHRqVEcrQWJ2bVQvQTR1YTRRQ2UybkJQam9ZeEFJMGFZay9xWQpOZHZhYVo2bkgzcUtuVzNIczE3VmoyVUdPQVdKVDFoTnQ1TzRWdWtLWlZkSkFzVS9xbExPTjFHTXh0M0RRSTFqCml0Q1diTEJkVEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUmpDQ0FpNmdBd0lCQWdJTUYyUUdoZXl2ZlVoQmxkd1NNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1EOHhGakFVCkJnTlZCQU1URFd0MVltVnlibVYwWlhNdFkyRXhKVEFqQmdOVkJBVVRIRGN5TXprd056ZzJNVEkxTWpNeU5EWTEKT0RJMU5Ea3dORFF5TkRJd0hoY05Nak13TlRJNE1qQTBNakV5V2hjTk16TXdOVEkzTWpBME1qRXlXakEvTVJZdwpGQVlEVlFRREV3MXJkV0psY201bGRHVnpMV05oTVNVd0l3WURWUVFGRXh3M01qTTVNRGM0TmpFeU5USXpNalEyCk5UZ3lOVFE1TURRME1qUXlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXpUQkoKanB6bXFKc1ZyZ2hLQUVGdTlaSllQUWpZaWl6d0hxNGFOUm9WeGVCTVNpMlFWVUlSNHJlU0JrQkFEMWhQYlJyZApLNkJreHdKU1lTY3d6L2VqY0NYZWErbDd1SnlPaHVFWGZyRVJpZ2E4M0Fpb1NBRXFUZkNFUTdqL2tQRG9ZQTFiCkFOaHBwVmptaitRZ0c0dWs1eFQvUnVBYnZmN3hOZ0V0MnovRG94czVnZ09nbUs5aXVMOVNMVDUwU2dFWCtHYkgKTUI1Wmg4YVh2T0pWOFRnYVpIT0lZSkFlLzU2dXVWcmtKWXh3TGxCQlBXR3RxZVIrRmRVTE4ycG85cVdKRzVITQpDZlZiR3lOejhzYk9oSGdyVlZkRHY5RVZOSjQ5cG54RjhCb3FvN01CamR0bDdpVlU2RmNXOUw1UEdPeDRVTGY5CjZob2JIeXpUSCtmR2hMMjhnUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FRWXdEd1lEVlIwVEFRSC8KQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVWlNMMnppUkRYTzFHSndLK1hLRWNqZ2dZYTMwd0RRWUpLb1pJaHZjTgpBUUVMQlFBRGdnRUJBRk91MFU5TlFMSXpmMmNhZnVkcjRPK0d3SE9ab1Z5VUpzc3JuZThJMTRNdmVZM3o2dW9yCmNuUHpBSERvZU9KWEZ1dGc0WGtLdXpoOHIvelltUm1IRndzeDNVcERiNHgydWZKTkFhbHh2M3BpaHRFZ294UlEKRENRczdFOFB5dzdQU05hRGx3UmxZaEE3UU4weWQvSGhFMG1VNkM2ZkJIWTJoQXFreEZDMEs0NGpnTmRmeUpNeAp1LzlwWGpxT0Y2c3dybmpFY05PNCtrMDJWWkNOTVBwYk5EaVJCNktFUUprclRBRFIrMXZxd2ZyczF4VjBrRTdRCnU5bVBTUVBRVzg2ejZBRmNqTVQ5ZVlVVEpaQ20vQ1d1Z3h5eW5wR2JEWGcreDJzQU1BMTgrdGVVMytaYUxzbDQKKzdEMTQ2VU5XRzh1eWlEUUh0cm9HbVVBVUpHLzFDMHVCSVk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURSakNDQWk2Z0F3SUJBZ0lNRjJRTXJHUUdNaUFlaWhlNU1BMEdDU3FHU0liM0RRRUJDd1VBTUQ4eEZqQVUKQmdOVkJBTVREV3QxWW1WeWJtVjBaWE10WTJFeEpUQWpCZ05WQkFVVEhEY3lNemt4TURjMk5UWXlPVGMyTnpjNQpOemt4TVRFM09UQTFNakV3SGhjTk1qTXdOVEk0TWpJek5EVTFXaGNOTXpNd05USTNNakl6TkRVMVdqQS9NUll3CkZBWURWUVFERXcxcmRXSmxjbTVsZEdWekxXTmhNU1V3SXdZRFZRUUZFeHczTWpNNU1UQTNOalUyTWprM05qYzMKT1RjNU1URXhOemt3TlRJeE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdnJ3NgpWOU5FZ0F2SmtOd1JMSS9tc2dSVU9Jb3FKam5QdUl4ak9YMk5vQjRjcnBZbVh4aTh0cC9SQ0cyUjdjVFVVc2NuCkxwdWE2MFVHY2hMT1d2L2g0cXVndUNvV0hENy9xamovZGsvSzFMMHlxTXhoeXJxaTIzV3hPMDNZYkh3Ly9SMDcKZzZQWXpLMDJkc1hiVVhueWdvQkdPQ2lObmVjQTJhOXJhbjBNdXRtMHNpMEVhK21jeW1KRVErb1BaYlAzTVdPUAo5UmZmbGpocTVtTURldnZEbFcyVWtyOVRMalJjOExqUGUwMEw5MStueHVtVzJBV2x2RXUxazZXSE50M0Vqc1Q1CitEYVoweXB6MFJtcEYwV2p0QVJ3NmFrOUw3eWROeHgwYi9BLzVoYjY0SFBEcDhmYXpCWXZiZFd4WUtFaW9BRHAKUVVVTVhwQVozMks4OTBITHB3SURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQVFZd0R3WURWUjBUQVFILwpCQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVjVHdsUHRZb2lSQytydVVOWTFDWm1vZEF0MUl3RFFZSktvWklodmNOCkFRRUxCUUFEZ2dFQkFGR2xXSlJQVVUybkxjZjFyN29rSHRMblY0NUpsbkIxcXFlcUxJTWI2U0FhT3J2RXBhblkKcXZxRExHSjdqblVpcDY5SEsrd1FNZHIzS1dneTJ1bGZoR29WUWp5dXRyM3VyRlMwbUhlRWE3SzBEMG5xNEtXVgpTT0E4RG1MZ3E1SXZMUHhkTkxLVXV6RnF1enh1V2lOK05zRVVVWCt5QjUzSkFqdVNsb1dHd3JqK1RZNVJnOHBlCkF6RzY1WE1YRC91QWVZY091aWNGemU5YU5IZlJUSlZJakJ0bVFVU05VRWpwaFUweldSREovQkJTa0w2RWNzYU8KaS9qUWZ5Yk5xUXVIWXhGUlVLUDVTSmRJVWlrOElUSWFEcmNHc0d1eEpVTGpNUlE5RjdNczd3NmtBVmxOWVBUNwpuakFCelVnU0RvbVYrUU9JNkN3enE3a1Z3YUErYkVSUHh1RT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    server: https://api.kube.qainnroad.com
  name: qa
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJek1ETXlNakUyTXprMU5Wb1hEVE16TURNeE9URTJNemsxTlZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS2NKCjVIazBaV2RzQ0RCcTlMbE52RVdUMlpyWUp0SVkzUkZDc3RKcE5KQWtEYlRqWDFYNGlzYTU3eVdqblVxRFE3K1MKZXhCNTd6cVhXSG8vbDdvM0JIK0QzTDBVQ2NaWU1KUEw3dnJNd2djbWtnMTk1cmx3QzlRUTMwREtmTFlOR0dLNAp4UjJoQ0UxR3I3cWNKT2ZITGRYY3hKbkhLOHkwT0VsbFVTY3RCY3BBV0h1cGtuK1lUaUF1UmVMMEhUckdycmZXCjdiZlFudm1tNTN3Mm1NMEloYkRjRUdMWDVrRWN2eEdaT09kY1AzY3Z3dU15NlVZS0FRRytqMU0rK1dTRm5acmUKMlRyemFLR3kxL0N6cllWVm5seHNwL3NCelBkSmFXbE5nN000ckxDYXFTWEphd1V0ckUvcGR2T20wTGdJczJveQpRYnA1RW02WkhFdFYrSjcybkNrQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZGazdscm94aFRZWTBTMjRVWnVEdU8welE4R0pNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQ2l6ZVkzWGFaVVh5Q2xzR3Z3awpZbHVrYnRETnRySndQbUdMeVBEVXBnd1B6eXlDVjhQMm5WSDc3MzJMSVBDamhJQzhramVwSU5saXpmbmt6ZE0yCjF4V29JLy9wdUVDVE5NdERmbGw5alJVaSsvLys2NWFCY2pJRk9za0hzdXc4c3ZUc0VQa2oxQVhvcEkwd29DZUoKTlVrdUc2dk9qeDE4TlpUcWgzRXlVWjJ5Z01acU5tM1hIK1Rsb3M5TjJHN3loY0Zrb21uYWFJM0tWbU8yQlgycApNZmNHdS91aWFNc2hGS042UC9iNndYY0tySnkybjJkRWUwc0JIdEV0cmkrZnFSYkJGUHdZNk5wRk9CV3EvTW4zCnBMRitpbElGamtnQnZtTmFtVjFHd1JVRGhrWmU3MzRycDlJSGV5dVlxR2RqQmhsNmFKZkZkcytRVExDcTJvVlYKZUo0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    server: https://9068D4256305A2C8F16FA70DAFA0A68A.gr7.us-east-1.eks.amazonaws.com
  name: ci
contexts:
- context:
    cluster: develop
    user: develop
  name: develop
- context:
    cluster: qa3
    user: qa3
  name: qa3
- context:
    cluster: qa
    user: qa
  name: qa
- context:
    cluster: ci
    user: ci
  name: ci
current-context: develop
kind: Config
preferences:
  colors: true
users:
- name: develop
  user:
    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMrekNDQWVPZ0F3SUJBZ0lNRmUzRVJqV2VZVmpwUEdQeU1BMEdDU3FHU0liM0RRRUJDd1VBTUJVeEV6QVIKQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13SGhjTk1qQXdNVEkxTVRReU1EVXdXaGNOTXpBd01USTBNVFF5TURVdwpXakFyTVJjd0ZRWURWUVFLRXc1emVYTjBaVzA2YldGemRHVnljekVRTUE0R0ExVUVBeE1IYTNWaVpXTm1aekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDNOaTFTNHllamNoendYZ1g0VFZvcEQKRFY1dkZmN1FmTGM1a3B5cXlMMDJhbVVHQys5QUFVcDVsUUdtQkJmSE5RejRYTm1UK3E5N3A0TUovd0ZZZUFhQwo3dUNyUVJYc25WR3pPbzkzN01hbVovNWxHaU1SV1ovKzZSSHRXRlp6dlhGTWt4UTlzZElMSGRKR2xsR0lKbzFGCjh2ZGFqY0Y3YzNGeEljODd0dzZtZm44aDV2SDdUNG43RDhESFo0NlYxdXRMbXZwenppcmJBS2NzZVZEY3lZUUMKVXl5bmk4dVFEcTVlNDdqd2NkOUkvNWI3enl3WnpkYzRJOWdQRGU3SUVYMzNhUVA1U0xKMVREUHBWbHd2aStGagplSXoyZHhqSGFjL0dDbk0ydyt3emRYejZsQk05RStXUUtNeW1qMXVMYXBtVWplK0RqK1cwV1pleUN2V3BxcUVDCkF3RUFBYU0xTURNd0RnWURWUjBQQVFIL0JBUURBZ2VBTUJNR0ExVWRKUVFNTUFvR0NDc0dBUVVGQndNQ01Bd0cKQTFVZEV3RUIvd1FDTUFBd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFEL2RVeVlrcEpYQnQ5V295cnlDc3dZcgppMGlqRDROOXltWGMwL3Q1TndaaWR5NFNtUGhoV0QrY2VvMWRpcExvUlVFOWNINzhPYnVpRVRjL2o0WlR6TjF4CjRzS243TDFFaWhMalpLZ3pRUDVEbGkwdUZuK3E0RmNDTE9hWkQ5djJJTG5uUlpEUXBEWllCdmhmZFVaeXF4M3oKeVRxeEd1ZDRvNUFRclFHZDV4S0xmWUpXWUlKWmdpNHd3cFU4NTZBSktDUXc0TXZmbVhvdjhqTWhpSDUxWnk2TApSR3FIVnVid2UzSUZ0d0NYQVFHRnliVm9HaFBCdFFDb2NCZm9naDV6OGJQQzZGOG5sQ0RXVSttTnEwaTVlN3ZoClhTK2pPQ1JsNVZadnFyU3VuMERQdmlPMVMrSHlwWWxLMW9SY1dyTktjVUs4aG85RE83SWRMVktxMkpVUUkvdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdmMyTFZMako2TnlIUEJlQmZoTldpa01OWG04Vi90Qjh0em1TbktySXZUWnFaUVlMCjcwQUJTbm1WQWFZRUY4YzFEUGhjMlpQNnIzdW5nd24vQVZoNEJvTHU0S3RCRmV5ZFViTTZqM2ZzeHFabi9tVWEKSXhGWm4vN3BFZTFZVm5POWNVeVRGRDJ4MGdzZDBrYVdVWWdtalVYeTkxcU53WHR6Y1hFaHp6dTNEcVorZnlIbQo4ZnRQaWZzUHdNZG5qcFhXNjB1YStuUE9LdHNBcHl4NVVOekpoQUpUTEtlTHk1QU9ybDdqdVBCeDMwai9sdnZQCkxCbk4xemdqMkE4TjdzZ1JmZmRwQS9sSXNuVk1NK2xXWEMrTDRXTjRqUFozR01kcHo4WUtjemJEN0ROMWZQcVUKRXowVDVaQW96S2FQVzR0cW1aU043NE9QNWJSWmw3SUs5YW1xb1FJREFRQUJBb0lCQUZmSUJsYUttQ2N3UndOTgp3Ny94WmFiUVdCQ0N3K056dlJwb2NCd3hDR0lxRm83ZWV3cU55WXNPTEJIMUhCTjdPRmZsVGR2N0NvZTZZc0RDCkVNUW9qR3BHaUFBMGRBZVZ4VFNSOWRXQW0ydE1idkJEQmhHTjVxdU9rM0NOR3J2eEQzNms4YWo4MTQ3VFFWbU0KOTl5QllZTVpCTVBOaDU0aVlFUHBGTC9wV0VKWGhWOWROU3d6UE9LVzgvUXR3MlVPM29QTHZGcS83Wkt0eUJCNgo1SlhoeW56TWhqM3JKZjA5M0xhcG9NM0d4bzZsc2huMlluR1JOUlBrc1lWSm94TWhxNExJbGdOSlkzK3dFQXJ2CkprNCtadkZCZC9qWTBCZlRHdk9oc3dIWUR1SGJzdEUvYnJ1bVpWT1JBTm9HOGQrR3E4Zk85VnlraHFFWWVHRlEKZEI3STgva0NnWUVBeDFBNEorNUMvM3YrdVZ0dGs0VjJ6aVpyUUM0UHc3ZDc3a3poYTF3Y1BSQ0tkMzZNYUVHVwoxcHUzN1ZnclBLeGUyK2JvVmFQWGN5VDJJeGVjL05qUHdqMjFmOWhBeEE0RHM4bjNrd250aHBEOG5BZFZ4MWZhCmJxTzBWd1lUa0wyeWNvVGpLZmU2c2ErVk5FSnlsUDNmbTNuSExES0pqVC9wRUVtQjVUQU1LV3NDZ1lFQTg4amgKT2wyaUczaVBOYmVNNFQwQzlwSVVaZVIxckdnNllEQjZKQWNMQ2l5UVBkWWc2cTFETEUrL2d0dWRCTVlwT2FJdgp5RkZIUDE5YWJ4TUZkdHEweFB3M0Y5aERDeklqZEdpSVF1RDVNRmRYU3h5cm01aVBjV1RTTndVT1lmazRxQzdSCjNxdTVndUZxWTVSMVVVbnJiajV3Tmo2T2xTZjQ2cGZZK055N1F5TUNnWUVBaDZYdUFpY2pTL1Bjd2RRYXVHcisKRjRHSVBzN2FoYzVMdHp4MXNuYW05Vnhia01YODB6dklaOWpsRGRDUzVLRS9raFFPRGJNTGY5OG84V3N4dWRmcApWZjVmbDFuYmdsTXphOXBKOTdXckJZbUprcnRmUXVOazB5WHhKOFVIN2R0ZEpwbVFiVkNmckN5ZXRFbUE2Q3Y4ClVqbElONmxSZW1PRHdFVDI5YitFbDI4Q2dZQUJxTFpQclY5ekRHajlGcGl3MTdkemNoOE5hbmFhaThNSjhJcUUKUUVBRSs3U25seE4yUldPVm81MU1DSzZTMzc1Y0ZBeDdNb0pubmdDQmpRR1dnM3FEZEt2elQ1ZDFOZ3dqdUtwawp1aDg0QXdBbkZMVGVSRFdGc2dmME0rYWJLQlVJbi9qeHFQMkVOSUNDMlBuTGFkTmVWckp3ekJBd1Y2dEwvV2lPCm1RSDFQUUtCZ0dMMlk3WTFIRnAxcEI5WnVOWExQZFd4enIrU0dDTmE1dkh0SGNtcFEyS3gwMlZDaHVldHJrd2EKNG4zZ2ZnTm9taGlMY1h5TVFpRW5TQ05LUFRYdkVRNmZFaXpUaVduQTBpeVVzTFIrZnZkU2QrNUE3MFowV21BSApoWmdpcEFqOVVCWkRtZUZIOXRwbjcyVUk0TnFrQ2pMN055VEg5a3RQdjFEajVieUtHT2NPCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
- name: qa3
  user:
    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMrekNDQWVPZ0F3SUJBZ0lNRmFWcEdpNGdVV2h2eDUwb01BMEdDU3FHU0liM0RRRUJDd1VBTUJVeEV6QVIKQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13SGhjTk1Ua3dOakF6TWpFd01EQTNXaGNOTWprd05qQXlNakV3TURBMwpXakFyTVJjd0ZRWURWUVFLRXc1emVYTjBaVzA2YldGemRHVnljekVRTUE0R0ExVUVBeE1IYTNWaVpXTm1aekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTkN3U2ZNKzVkN1IzcWZzdmlMaWlmaU4KbldTb2x3b2h1Sm9COThsbGYrNUhDbGNBbVZWWkNhMk1hdHZlbmVEUmY0N3l4SVhBbE11UGtJT3gyWlRrUzdEYwpkWldvY2JMN3dpdGxHWXpnWGlBUmNkVEZwaTFrUHQrTzZmWHF6SFNuWG1tRUdhV3h0TkYySERQNHdmeVlSWWg0CmMycEw1UlV5czNIbGw1bndZbmdYb09SNllFaHVRTWxnVm1tOUxGWk9wVUMxRlFmRVJpcU5DclZvS0tyRGkwYTMKZ2xLNUhlamdQcVROTW00MWIrQzlndTdPbGZ5YlZXTjhBWHFTcDQyUHdoWS85MU5QSUpyVFBMYjNmWlY3bDVacwpheER5UlBsbnN3ZmtWc1hMWHRKa1BaSDRPc0RySUtnVjBiNzB5b21uYy9uL2V2K1gxb0ExQjZBSDBDUFd4R01DCkF3RUFBYU0xTURNd0RnWURWUjBQQVFIL0JBUURBZ2VBTUJNR0ExVWRKUVFNTUFvR0NDc0dBUVVGQndNQ01Bd0cKQTFVZEV3RUIvd1FDTUFBd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJSTN5RGc1dzI1Tm90OGZRWmJGcGtpMgo1VVlSbStYbStWcmdOWXdRZE5TSW5tTERlZVU1aGdIa1ZyN1NPbWlEUTVNa3BNYjJyNCtlTTN2aG03ZFBFbW40CklkbnJKMlhRRDZDcEdkNmgwNG1md0lqKzZtK2JsMDkvRkdHRGNFVEZEM1RyWnZKK1FJbFQxRG81Uy9odm9tbmsKUnlZU09NQmV4WUZlSUs2SjlUV1d1VWdYT3ZPdzFLc1lOdlR3dTRBM0ZIZTY3enpic1pMOVh0MVQ1K3duSktTYgpYSmI2RjlXRVdCczFuYm5sNCt2aWRkZXV6SlREMUpVbVhsRmxWRTZ3M3dseGg1K1hGZW9IVWVTMlVJUzJiTnhoCm42cEttR1NLakNXMDJsb3dKeFdrbG5qTm5KcEx5OFpnczNIaU5qUWt3Qm5ZOHN5dG0zR1o1d1prTGZoV2dtQT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMExCSjh6N2wzdEhlcCt5K0l1S0orSTJkWktpWENpRzRtZ0gzeVdWLzdrY0tWd0NaClZWa0pyWXhxMjk2ZDRORi9qdkxFaGNDVXk0K1FnN0habE9STHNOeDFsYWh4c3Z2Q0syVVpqT0JlSUJGeDFNV20KTFdRKzM0N3A5ZXJNZEtkZWFZUVpwYkcwMFhZY00vakIvSmhGaUhoemFrdmxGVEt6Y2VXWG1mQmllQmVnNUhwZwpTRzVBeVdCV2FiMHNWazZsUUxVVkI4UkdLbzBLdFdnb3FzT0xScmVDVXJrZDZPQStwTTB5YmpWdjRMMkM3czZWCi9KdFZZM3dCZXBLbmpZL0NGai8zVTA4Z210TTh0dmQ5bFh1WGxteHJFUEpFK1dlekIrUld4Y3RlMG1ROWtmZzYKd09zZ3FCWFJ2dlRLaWFkeitmOTYvNWZXZ0RVSG9BZlFJOWJFWXdJREFRQUJBb0lCQUNlS0R5alFOUHRucGhrSQo2T2x4SkpUOE4rTDNjazZRSHdyRzdxeXcxM0ZNOG0rVGhIbkFPZTR3MlpvNDdvN0hBclVSMkJ4RFphMi8wTEN6CkJMZUtIYkV2dy9PTUM2Yk92blk4WEgvdGpzZmlwaitiQnlZNGhSVVVYYzJqSkFQQ0prZzFxQ3BWcGgyOWxCQmcKeEZoWWZXd2k3ak1vbUFuUkptQ2hFSDB4SjJiN00zbmFta1hETCt6bStBOHExSkZjVnkxK0pOc0Zoc24xWURWcwpoTWpEak9wV3dwbS9rSTFOMm8xUXBwTHQ5MG9KbldzU3lPaDhDOEwxV1ZaRFB3U0wzQnZUeitJcEUycE9WT096CjZ0ZXpHaFlKMVp2dHNaV25ZVU5CblBjc2hrVTdFbkRvdHNyYmsxL3U3Y2NjdHhMbEFiSWVodzFRSmltY3owUUQKMWZTVFhOa0NnWUVBNFNHMzY2Z0VQOHQxZG9zRUc0dEJIVmc2SlBWU0lOUk9QZS8zRERBa1FzeDQrNjBVTmlUYgpIK0tmd05sUDQ4OWhDZU05ZW51TE0wVEFXTklUUUhWTUhkSVNjcG90WHUzSkREZDhjQTVmUjFOUW85dlJLWGNnCmd2MXhZSGVKcXUvVXJpNFRLTHlUVkZiZTM2dEVIVE5PRHFHQ2RRNWE0WGcxeWZBVTF0azBlQ2NDZ1lFQTdVMW8KRnMvdE1oUXZsMllZZ2JVOStERHhKZHV0OVpsSnZuZWVZYlJuaXFqNEJIWWpzV3daNTZxcmlmV2V1VDFHOWNOaQpCTkhzWmkwa1dHZVZhbkJpSkNPRnMrKzU2d0ZEMmRMbWp3ZklJNStvemhQdURLaFdiTjQvdnNTbVBmdGxweG1iCjR2VVpkK3Y2dXNnVDdFbnFZZUVoN3luNHZ5VENHQURUdldRVzIyVUNnWUVBdjhDRWNzZXN0dG1JdHVzNUdHekgKalVMMFl6NUFNWTRqQmtZNVdidzNabDNhUGlMeE1CeThOckJEK1hJZXhaNkF2SGM4aWZKb1ljYVJQaFhRSi9yQQpWalh6V0lGUlc2V1V0RDhlVWlNcnJBaWVpckpUdU1tcWUyZDdCZnRLMnJsam9PZkZrZERzZTgxeUQzaEVqOHAvCkZaOGpDcWlyWjVlSDJQUVFDOTc4L2NrQ2dZQTkvRzFISURNbVZLMkZ6NjV4RzBXL3NoRWJ3WUYwV1FFeFZvK3gKbCsxQUJCa2RHVHNEbW1nOTRwQUNibjF5aDdZa2RsQUJVRkIrOUNXOVRmbHluejZUa0EvWnk3SDEyQlBBTDEzNApXS0VINVNtMEF2SzRyYlE5cGVSaTBYMVhUWGJsS2tSVkNZOElpMFNvUzZFZ3BNSXJwU0kzRmZDYkJXQUo0eFZzCk1GdmtIUUtCZ0Fsd1NZVVFPaDE1T1d0bURqSVprZ2k2M1NZZUo3ZzVKOWRCT1FxdFBsVkN6ZXlGeGZ0YzRqZEoKcEI1OGZPQWFNeGZlSEJRTkFlOE5SYU9UR2ZvcFArbTZBdFBXV1g5dzdmcm1tb3ZOMGxsU1JMUXNrVTVBbTB0WQpaSWI3L0t1bDBYWnkrWUU5dUZJcG53OHRBTTBmM1BrdnZMZ2NqRzE1eXpURE8wSm5kZC83Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
- name: qa
  user:
    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMrekNDQWVPZ0F3SUJBZ0lNRlZhRUdZYWlRd1IxcXBsWU1BMEdDU3FHU0liM0RRRUJDd1VBTUJVeEV6QVIKQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13SGhjTk1UZ3dPVEU1TWpBeU5qQTRXaGNOTWpnd09URTRNakF5TmpBNApXakFyTVJjd0ZRWURWUVFLRXc1emVYTjBaVzA2YldGemRHVnljekVRTUE0R0ExVUVBeE1IYTNWaVpXTm1aekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTk8xbmFoMlp1aWQ4VHQ2QUtCSkk2Y1IKZ0R1cnV5TWh3dk1lYmcwVG9WajFlVTlGOWMySm0yRjVKeEkwUCtDdzNiOHlMdzk5a1RUVVhadmNwc014TE9SRQpaRG1pZkk3TmdubFBKaGRBU1p1Q2JmNTZ6U2JmS3l1QzJpenM5T3E0KytCNXNIc3pWSFV6NmYzckpnN0Y5TVYyCnZWWTZzN29KU3JMRVdjRkVCcXNFV0JrZEM2eHJHQk5wSHdtMTAyam9YY1JCVGNKOEh0S1p1cHpaeDZhdWFOKzYKK1BZV0E0V2xtSWlOZ05nUlc5bEE3VVBEMVhMYzduTVV3czF6MFZ2ODhwRDg5WHZkVXIxeHRSM2h2WmNZYXp5VApBNGRuWEFtTXJUZWc4YThJWWdoMmFlM3NGVTR1b0JqY29QVUlXb3kyN2xzeXh3ZVNhWlJaWlhMNGFSR2hSOTBDCkF3RUFBYU0xTURNd0RnWURWUjBQQVFIL0JBUURBZ2VBTUJNR0ExVWRKUVFNTUFvR0NDc0dBUVVGQndNQ01Bd0cKQTFVZEV3RUIvd1FDTUFBd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFDOWEwbjRRVWFuQ294VERJVTNzR1pYTApjT1ZWMUNtdnRkOHBnWEJiVjd2N2lYd2xIa3ppT3FWUm9tQU5USVZocm5HekhVK0VKOE1kKzVGVE5hK3o5YUNTClN2TkV5L2tCTGZYMXVHcUJVSStUemRROHlXNVlwN21sMm51RGNhMko1Snl3a1RId2FSS1FjYXFsQUhUR2VMbmQKNXNPTUtoWEt3Y3NpOGJrVkEzQ0I3VDErMzhmNnV6Y0pDZ3BwSWsxQUFZdTRZUEhDaUg1d1VrQ05ZYmFCdk95bApja1JmSjFaZHF3R015eDBzdmUxWHJVYnVTRjZaWWQ3bEg1VE1JS0xrUmRuMzB2RmlpN2QxNlkwZFVZbDc4RVVLClM3ZXNSL1YvTytnQlVTUVQyazJIblN0N3FSc0FRL0hTYWU2M1ZmaEplbm1BRU1SKzhBUHgva1o4MVU4NlNHcz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMDdXZHFIWm02SjN4TzNvQW9Fa2pweEdBTzZ1N0l5SEM4eDV1RFJPaFdQVjVUMFgxCnpZbWJZWGtuRWpRLzRMRGR2ekl2RDMyUk5OUmRtOXltd3pFczVFUmtPYUo4anMyQ2VVOG1GMEJKbTRKdC9uck4KSnQ4cks0TGFMT3owNnJqNzRIbXdlek5VZFRQcC9lc21Ec1gweFhhOVZqcXp1Z2xLc3NSWndVUUdxd1JZR1IwTApyR3NZRTJrZkNiWFRhT2hkeEVGTndud2UwcG02bk5uSHBxNW8zN3I0OWhZRGhhV1lpSTJBMkJGYjJVRHRROFBWCmN0enVjeFRDelhQUlcvenlrUHoxZTkxU3ZYRzFIZUc5bHhoclBKTURoMmRjQ1l5dE42RHhyd2hpQ0hacDdld1YKVGk2Z0dOeWc5UWhhakxidVd6TEhCNUpwbEZsbGN2aHBFYUZIM1FJREFRQUJBb0lCQUE3bTJMc1Q0bmg3TFpDMwpMTFliajlQaHFub0l3M3BjbFFGUjRnTXZuNHJJZElwODdTbFRoMGxjSXNEb1JwckZPRWFOL0x3RlphUW5VcE4yCis1SC9zeDQ2SmlmY1pSSVVLeHZvMDFDTnFPQzJWSkcyQ1J5MFZyQ1FYRlVQTk1vVXpUM21zdUpwSVlmQ2FMVUQKeVVEKzlCUzJIK3VpNUNXekk3dmprRUhIVFFUYWY1NWFTanZvZ0hOVFltM1Raa0VBQTR5eWpMNHA2N2k4Q1dBRQo5bk01Ym04cWZsejU5a1kxMHRJbnQ3N0JVY0lvVkkxSjBZdDZTQXg0YXRCOEFQb2t0UmYxWlZ4VzJWd1JmMEdSCmt6WnlpcmtlU2FDeWlnNlhCcEZQYWxZZ3dGdHVnclNaQ0ljWm9PTk9WVGhiU1o3a1Q5N2tnVnd1T01kbG01TDkKNm1sR3orRUNnWUVBODVhb3V6elMyMi9qaUo2UVgyN1BXd1BzNDFqcWtQQTU4UGFBWit1MkdiQ0c0SjhhZ21wdwpLNUF0S1lvdDdTV1kxcFE0MVZ5am9paWdOYUlkRHRyOGV2K3Nlc0JvSGVvOWNuV1pYRkN3S3d4TmtmSmsxbHFrCjNzL0hPdk9iSS9xUm9ndWpjeVhmdVE2UEFuMlEydzlZQVFvcFhhRW9ZdUExR0hhSjhjNk9SNlVDZ1lFQTNuOGgKTklMQlZzbGcrV2thUFJIajdUd3dtTVJTZGwrVngxRGVGNzRWa3dXa09NZEpkaHZRVDdteE5BblkrSWFXNXJRUwpzaGx6d3NtRGhQWWhBOElkaUpGWHUwbThlcVNLWHdNRzZGbDByQmNobTVmR2ZXaEJYZlFXam1tUTlGaW5PcFkyCnovMDhNNFEyMWpPREp6My90YzlTd3pWOWtCTm41VW1aTE1iT3lka0NnWUVBdkhJb3RUblg4cFc4Rkh4L09xVlMKVzVwTTBKR0FYb0xLZ0lWalQ0SkdUZGVJY1F3RmlURm85L3JCUmFxMTN3cEFGSGwxQW5ONTBFRFh1TVppN3BReAowY0lzb0lacnhnRHFhcnRaMnRZOWhBQXZucUpFcXFSVGVtQ0tSQ3drTUpCdnpFcHV0KzFzQ0JHZ1I0LzIyZElrCkJpSGpZS0VGeW9Dajh2bjV2QTFOZTFVQ2dZQlhKaWlWYnRuWDZvMEhaRG1ZemhjZTUwS0pzK3d3M1lQSFRFK1IKc1N5Mko3R0pZOVhNWTF5V3ZiOUJDTkpwbGg0cFEwTkhhMXpDWVRnWXJtZUVGMWFHRlpmdGpoWTdXNU92WDNvbgpMRkxjelRxbXZTNU1GTGYxMnhPeXVIckVtcXoxNzd5TWZ6NURWM2c3TW5ZZXV0UWNISmJvUzExaFA1aWtZTTJVCmtsS1JFUUtCZ0hQc0JMYnJ4OHova3BybzVTUlZBNDYrUU1xVjh5ZTZPcW0rOGljUXNRZlNYTklkU0I3ZnJYWXUKS2NRaTYrR3BLUW9ROFpNdmhkN0hBUzlLM3h1cWQzNkFRZWFWeVp6bTVuN2ZnK2hrN1B2UVVCdFk2aXlxYjBRbgpXaWFYSmpKbENKS3NOUGtmMGlGVUVGbm9xdXM4NU4zeHJiUGJZTjV0SEJiRXp6U094d0VlCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
- name: ci
  user:
    token: eyJhbGciOiJSUzI1NiIsImtpZCI6IlBhYVRsRmNoNE9raDA0ZlJuUFROQTlJS1ppU1IyeGwyTlg2dDREUTQ2MWMifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJqZW5raW5zIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImplbmtpbnMtYWRtaW4iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiamVua2lucy1hZG1pbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6ImJiZDMwNzQ1LWM0N2EtNGU5MS1hMDEwLTEzOWNlMDQ4OGI0NSIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpqZW5raW5zOmplbmtpbnMtYWRtaW4ifQ.vS29RS457C-K0qEhorCdyBKpn0gVlCiZtZtRfmrETgIlRwRBVPVxRqE1z0esIQcD1w-2bfwJdYFoTjCwnHp6hWdmDwI_KmCb2iG6SCqx-EfJNcnX5bfmlfUvszRHrFZWYAZiZIaCPrd_HER3FF3BPy4DBj5dNHf-27CYTFrTgSg4043MEX2iZgOqZBvz-dfBCeDBi8WrUdLARfq4DPlFwOdaD8qjcDNrgBphma37LddZgFfA_DVb5XWtLlwJKhqdbKNDObQA8GzTuk75_6AcyX9xYixjEFuf4wXireggNRXCTugdlZfs_GCLVTkn2AFvBjsBTSfbgRLZWKM-X74Rww

kind: Secret
metadata:
  name: kubeconfig
  namespace: jenkins
type: Opaque
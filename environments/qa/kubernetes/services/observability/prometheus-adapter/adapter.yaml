apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-adapter
  namespace: observability
spec:
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  selector:
    matchLabels:
      app: prometheus-adapter
      env: qa
  template:
    metadata:
      labels:
        app: prometheus-adapter
        env: qa
      name: prometheus-adapter
      annotations:
        checksum/config: b2049f7fa559354b2d176d5914b99ab3326ddf110ce70e9076040efd6e5076e2
    spec:
      serviceAccountName: prometheus-adapter
      containers:
      - name: prometheus-adapter
        image: "k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.10.0"
        imagePullPolicy: Always
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 250m
            memory: 352Mi
        args:
        - /adapter
        - --secure-port=6443
        - --cert-dir=/tmp/cert
        - --logtostderr=true
        - --prometheus-url=https://observability-prometheus.qa-steblynskyi.com
        - --metrics-relist-interval=1m
        - --v=4
        - --config=/etc/adapter/config.yaml
        ports:
        - containerPort: 6443
          name: https
        livenessProbe:
          httpGet:
            path: /healthz
            port: https
            scheme: HTTPS
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: https
            scheme: HTTPS
          initialDelaySeconds: 30
          timeoutSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["all"]
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 10001
        volumeMounts:
        - mountPath: /etc/adapter/
          name: config
          readOnly: true
        - mountPath: /tmp
          name: tmp
      priorityClassName:
      securityContext:
        fsGroup: 10001
      volumes:
      - name: config
        configMap:
          name: prometheus-adapter
      - name: tmp
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-adapter
  namespace: observability
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 6443
  selector:
    app: prometheus-adapter
    env: qa
  type: ClusterIP
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1beta1.custom.metrics.k8s.io
spec:
  service:
    name: prometheus-adapter
    namespace: "observability"
  group: custom.metrics.k8s.io
  version: v1beta1
  insecureSkipTLSVerify: true
  groupPriorityMinimum: 100
  versionPriority: 100
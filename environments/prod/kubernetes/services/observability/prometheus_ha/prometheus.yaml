apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: prometheus
  namespace: observability
  labels:
    app: prometheus-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-server
  serviceName: prometheus-gateway
  template:
    metadata:
      labels:
        app: prometheus-server
        thanos-store-api: "true"
      annotations:
        "cluster-autoscaler.kubernetes.io/safe-to-evict": "false"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: prometheus-server
                namespaces:
                  - "observability"
                topologyKey: kubernetes.io/hostname
              weight: 1
      containers:
        - name: prometheus
          image: quay.io/prometheus/prometheus:latest
          args:
            - "--config.file=/etc/prometheus-shared/prometheus.yml"
            - "--storage.tsdb.path=/prometheus/"
            - "--log.level=debug"
            - "--web.enable-lifecycle"
            - "--storage.tsdb.no-lockfile"
            - "--storage.tsdb.min-block-duration=2h"
            - "--storage.tsdb.max-block-duration=2h"
            - "--storage.tsdb.retention.time=10d"
            - "--storage.tsdb.retention.size=22GB"
          ports:
            - containerPort: 9090
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          volumeMounts:
            - name: prometheus-rules
              mountPath: /etc/prometheus/rules
            - name: prometheus-config-shared
              mountPath: /etc/prometheus-shared/
            - name: prometheus-storage
              mountPath: /prometheus/
        - name: thanos
          image: quay.io/thanos/thanos:v0.28.0
          args:
            - "sidecar"
            - "--log.level=debug"
            - "--tsdb.path=/prometheus"
            - "--prometheus.url=http://127.0.0.1:9090"
            - |
              --objstore.config=type: S3
              config:
                bucket: "steblynskyi-prod-prometheus-thanos-storage"
                endpoint: "s3.us-east-1.amazonaws.com"
                access_key: "here"
                secret_key: "here"
            - "--reloader.config-file=/etc/prometheus/prometheus.yml.tmpl"
            - "--reloader.config-envsubst-file=/etc/prometheus-shared/prometheus.yml"
            - "--reloader.rule-dir=/etc/prometheus/rules/"
            - "--grpc-address=[$(POD_IP)]:10901"
            - "--http-address=[$(POD_IP)]:10902"
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          ports:
            - name: http-sidecar
              containerPort: 10902
            - name: grpc
              containerPort: 10901
          livenessProbe:
            httpGet:
              port: 10902
              path: /-/healthy
          readinessProbe:
            httpGet:
              port: 10902
              path: /-/ready
            initialDelaySeconds: 5
          volumeMounts:
            - name: prometheus-storage
              mountPath: /prometheus
            - name: prometheus-config-shared
              mountPath: /etc/prometheus-shared/
            - name: prometheus-config
              mountPath: /etc/prometheus
            - name: prometheus-rules
              mountPath: /etc/prometheus/rules
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 1000
      volumes:
        - name: prometheus-config
          configMap:
            defaultMode: 420
            name: prometheus-server-conf
        - name: prometheus-config-shared
          emptyDir: { }
        - name: prometheus-rules
          configMap:
            name: prometheus-rules
  volumeClaimTemplates:
    - metadata:
        name: prometheus-storage
        namespace: observability
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "25Gi"
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-gateway
  namespace: observability
  labels:
    name: prometheus
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: grpc
      port: 10901
      targetPort: grpc
  selector:
    thanos-store-api: "true"
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: prometheus
  namespace: observability
spec:
  maxUnavailable: 0
  selector:
    matchLabels:
      app: prometheus-server
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inventory-api
  labels:
    app: inventory-api
    env: prod
  namespace: pms
spec:
  replicas: 3
  revisionHistoryLimit: 3
  template:
    metadata:
      name: inventory-api
      labels:
        app: inventory-api
        env: prod
      annotations:
        steblynskyi.io/inject-secret: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "9464"
        steblynskyi.io/scrape: "true"
    spec:
      imagePullSecrets:
        - name: steblynskyi
      containers:
        - name: inventory-api
          image: steblynskyi-docker.jfrog.io/pms-inventory-api:83dbb9c5f
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 150m
              memory: 350Mi
            limits:
              cpu: 2000m
              memory: 2000Mi
          ports:
            - containerPort: 5000
              name: http
            - containerPort: 9464
              name: metrics
          env:
          - name: ASPNETCORE_ENVIRONMENT
            value: Production
          - name: AWS_ACCESS_KEY_ID
            value: "here"
          - name: AWS_REGION
            value: us-east-1
          - name: AWS_SECRET_ACCESS_KEY
            value: "here"
          - name: INNCENTER_RATES_DB_USERNAME
            value: "here"
          - name: INNCENTER_RATES_DB_PASSWORD
            value: "here"
          - name: INNSIGHTS_DB_USERNAME
            value: "here"
          - name: INNSIGHTS_DB_PASSWORD
            value: "here"
          - name: RESERVATION_RATEENGINE_DB_USERNAME
            value: "here"
          - name: RESERVATION_RATEENGINE_DB_PASSWORD
            value: "here"
          - name: ConnectionStrings__History
            value: "Server=reservation-db.steblynskyi.com;User Id=$(RESERVATION_RATEENGINE_DB_USERNAME);Password=$(RESERVATION_RATEENGINE_DB_PASSWORD);Database=rateengine; Application Name=pms-inventory-api"
          - name: ConnectionStrings__InnCenter
            value: "Server=sql-inncenter.steblynskyi.com;User ID=$(INNCENTER_RATES_DB_USERNAME);Password=$(INNCENTER_RATES_DB_PASSWORD);Initial Catalog=here;pooling=true;connection lifetime=180;Connect Timeout=60;max pool size=3000; Application Name=pms-inventory-api; MultipleActiveResultSets=True; TrustServerCertificate=true;"
          - name: ConnectionStrings__InnSights
            value: "Host=innsights-db.steblynskyi.com;Database=innSights;Username=$(INNSIGHTS_DB_USERNAME);Password=$(INNSIGHTS_DB_PASSWORD); Application Name=pms-inventory-api"
          - name: ConnectionStrings__RateEngine
            value: "Application Name=pms-inventory-api;User ID=$(RESERVATION_RATEENGINE_DB_USERNAME);Password=$(RESERVATION_RATEENGINE_DB_PASSWORD);Server=reservation-db.steblynskyi.com;Database=rateengine;Maximum Pool Size=200;"
      restartPolicy: Always
  selector:
    matchLabels:
      app: inventory-api
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    alb.ingress.kubernetes.io/healthcheck-path: /
    alb.ingress.kubernetes.io/success-codes: 200-499
  name: inventory-api
  namespace: pms
spec:
  selector:
    app: inventory-api
  ports:
    - port: 80
      name: http
      targetPort: 5000
      protocol: TCP
  type: NodePort
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: inventory-api
  namespace: pms
spec:
  maxReplicas: 5
  minReplicas: 3
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: inventory-api
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageValue: 1800m
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageValue: 1750Mi
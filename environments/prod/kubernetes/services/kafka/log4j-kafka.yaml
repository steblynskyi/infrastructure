apiVersion: v1
kind: ConfigMap
metadata:
  name: log4j-kafka
  namespace: "kafka"
  labels:
    app: kafka
data:
  log4j.properties: |-
    log4j.rootLogger=INFO, stdout, kafkaAppender, file

    log4j.appender.stdout=org.apache.log4j.ConsoleAppender
    log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
    log4j.appender.stdout.layout.ConversionPattern=[%d] %p %m (%c)%n

    # Define the RollingFileAppender
    log4j.appender.file=org.apache.log4j.RollingFileAppender
    log4j.appender.file.File=/bitnami/kafka/logs/logfile.log
    # Define the file name pattern for the rolling files
    log4j.appender.file.DatePattern='.'yyyy-MM-dd
    # Define the maximum number of backup files to keep
    log4j.appender.file.MaxBackupIndex=10
    # Define the maximum size of each log file
    log4j.appender.file.MaxFileSize=10MB
    # Define the rolling strategy
    log4j.appender.file.RollingPolicy=org.apache.log4j.rolling.TimeBasedRollingPolicy
    log4j.appender.file.RollingPolicy.FileNamePattern=/bitnami/kafka/logs/logfile.%d{yyyy-MM-dd}.log
    log4j.appender.file.RollingPolicy.ActiveFileName=/bitnami/kafka/logs/logfile.log
    log4j.appender.file.RollingPolicy.Interval=1
    log4j.appender.file.RollingPolicy.Synchronous=true
    # Define the rollover strategy
    log4j.appender.file.TriggeringPolicy=org.apache.log4j.rolling.SizeBasedTriggeringPolicy
    log4j.appender.file.TriggeringPolicy.MaxFileSize=10MB
    log4j.appender.file.TriggeringPolicy.ActiveFileName=/bitnami/kafka/logs/logfile.log
    log4j.appender.file.TriggeringPolicy.Synchronous=true
    log4j.appender.file.TriggeringPolicy.CompressionLevel=6
    log4j.appender.file.TriggeringPolicy.CompressionExtension=.gz
    # Define the log format
    log4j.appender.file.layout=org.apache.log4j.PatternLayout
    log4j.appender.file.layout.ConversionPattern=[%d] %p %m (%c)%n

    log4j.appender.kafkaAppender=org.apache.log4j.ConsoleAppender
    log4j.appender.kafkaAppender.layout=org.apache.log4j.PatternLayout
    log4j.appender.kafkaAppender.layout.ConversionPattern=[%d] %p %m (%c)%n

    log4j.appender.stateChangeAppender=org.apache.log4j.ConsoleAppender
    log4j.appender.stateChangeAppender.layout=org.apache.log4j.PatternLayout
    log4j.appender.stateChangeAppender.layout.ConversionPattern=[%d] %p %m (%c)%n

    log4j.appender.requestAppender=org.apache.log4j.ConsoleAppender
    log4j.appender.requestAppender.layout=org.apache.log4j.PatternLayout
    log4j.appender.requestAppender.layout.ConversionPattern=[%d] %p %m (%c)%n

    log4j.appender.cleanerAppender=org.apache.log4j.ConsoleAppender
    log4j.appender.cleanerAppender.layout=org.apache.log4j.PatternLayout
    log4j.appender.cleanerAppender.layout.ConversionPattern=[%d] %p %m (%c)%n

    log4j.appender.controllerAppender=org.apache.log4j.ConsoleAppender
    log4j.appender.controllerAppender.layout=org.apache.log4j.PatternLayout
    log4j.appender.controllerAppender.layout.ConversionPattern=[%d] %p %m (%c)%n

    log4j.appender.authorizerAppender=org.apache.log4j.ConsoleAppender
    log4j.appender.authorizerAppender.layout=org.apache.log4j.PatternLayout
    log4j.appender.authorizerAppender.layout.ConversionPattern=[%d] %p %m (%c)%n

    # Change the line below to adjust ZK client logging
    log4j.logger.org.apache.zookeeper=INFO

    # Change the two lines below to adjust the general broker logging level (output to server.log and stdout)
    log4j.logger.kafka=INFO
    log4j.logger.org.apache.kafka=INFO

    # Change to DEBUG or TRACE to enable request logging
    log4j.logger.kafka.request.logger=WARN, requestAppender
    log4j.additivity.kafka.request.logger=false

    # Uncomment the lines below and change log4j.logger.kafka.network.RequestChannel$ to TRACE for additional output
    # related to the handling of requests
    #log4j.logger.kafka.network.Processor=TRACE, requestAppender
    #log4j.logger.kafka.server.KafkaApis=TRACE, requestAppender
    #log4j.additivity.kafka.server.KafkaApis=false
    log4j.logger.kafka.network.RequestChannel$=WARN, requestAppender
    log4j.additivity.kafka.network.RequestChannel$=false

    log4j.logger.kafka.controller=TRACE, controllerAppender
    log4j.additivity.kafka.controller=false

    log4j.logger.kafka.log.LogCleaner=INFO, cleanerAppender
    log4j.additivity.kafka.log.LogCleaner=false

    log4j.logger.state.change.logger=INFO, stateChangeAppender
    log4j.additivity.state.change.logger=false

    # Access denials are logged at INFO level, change to DEBUG to also log allowed accesses
    log4j.logger.kafka.authorizer.logger=INFO, authorizerAppender
    log4j.additivity.kafka.authorizer.logger=false
    log4j.appender.stdout.Threshold=OFF
